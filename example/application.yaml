name: Riffl example application
properties:
  catalog.name: "custom_catalog"
  sink.path: "file:///tmp/riffl-sink/"
  state.path: "file:///tmp/riffl-state/"
execution:
  type: FLINK
  configuration:
    execution.checkpointing.interval: 45s
    execution.checkpointing.mode: EXACTLY_ONCE
    state.savepoints.dir: ${properties.state.path}state/savepoints
    state.checkpoints.dir: ${properties.state.path}state/checkpoints
metrics:
  storeUri: ${properties.state.path}metrics/
  skipOnFailure: true
catalogs:
  - create: " 
      CREATE CATALOG ${properties.catalog.name} WITH (
        'type'='generic_in_memory'
      )"
databases:
  - create: " 
      CREATE DATABASE IF NOT EXISTS ${properties.catalog.name}.riffl"
sources:
  - create: " 
      CREATE TABLE IF NOT EXISTS source_product (
          id BIGINT,
          type INT,
          name STRING,
          price DECIMAL(10, 2),
          buyer_name STRING,
          buyer_address STRING
      ) WITH (
          'connector' = 'datagen',
          'rows-per-second' = '10',
          'fields.type.kind'='random',
          'fields.type.min'='1',
          'fields.type.max'='10',
          'fields.price.kind'='random',
          'fields.price.min'='10',
          'fields.price.max'='1000'
      )"
    map: "    
        SELECT
            *,
            CURRENT_TIMESTAMP as ts
        FROM source_product
        WHERE (type = 1 AND RAND_INTEGER(0,100) BETWEEN 0 AND 100)
           OR (type = 2 AND RAND_INTEGER(0,100) BETWEEN 0 AND 60)
           OR (type > 2 AND RAND_INTEGER(0,100) BETWEEN 0 AND 30)"
sinks:
#  - create: "
#      CREATE TABLE IF NOT EXISTS sink_default (
#        id BIGINT,
#        type INT,
#        name STRING,
#        price DECIMAL(10, 2),
#        buyer_name STRING,
#        buyer_address STRING,
#        ts TIMESTAMP,
#        dt STRING,
#        hr STRING
#      ) PARTITIONED BY (dt, hr)
#      WITH (
#        'connector'='filesystem',
#        'format'='parquet',
#        'path'='${properties.sink.path}'
#      )"
  - create: "
    CREATE TABLE IF NOT EXISTS sink_default (
        id BIGINT,
        type INT,
        name STRING,
        price DECIMAL(10, 2),
        buyer_name STRING,
        buyer_address STRING,
        ts TIMESTAMP,
        dt STRING,
        hr STRING
    )
    WITH (
      'connector' = 'print'
    )"
    query: "
      SELECT 
        *,
        CAST(DATE_FORMAT(CURRENT_TIMESTAMP, 'yyyy-MM-dd') AS STRING) AS dt, 
        CAST(DATE_FORMAT(CURRENT_TIMESTAMP, 'HH') AS STRING) AS hr FROM source_product"
    parallelism: 4
    distribution:
      className: "io.riffl.sink.row.DistributeByFactory"
      properties:
        keys:
          - "type"
  - create: "
    CREATE TABLE IF NOT EXISTS sink_second (
        id BIGINT,
        type INT,
        name STRING,
        price DECIMAL(10, 2),
        buyer_name STRING,
        buyer_address STRING,
        ts TIMESTAMP,
        dt STRING,
        hr STRING
    )
    WITH (
      'connector' = 'print'
    )"
    query: "
      SELECT 
        *,
        CAST(DATE_FORMAT(CURRENT_TIMESTAMP, 'yyyy-MM-dd') AS STRING) AS dt, 
        CAST(DATE_FORMAT(CURRENT_TIMESTAMP, 'HH') AS STRING) AS hr FROM source_product"
    parallelism: 4
    distribution:
      className: "io.riffl.sink.row.DistributeByFactory"
      properties:
        keys:
          - "type"
  - create: "
    CREATE TABLE IF NOT EXISTS sink_third (
        id BIGINT,
        type INT,
        name STRING,
        price DECIMAL(10, 2),
        buyer_name STRING,
        buyer_address STRING,
        ts TIMESTAMP,
        dt STRING,
        hr STRING
    )
    WITH (
      'connector' = 'print'
    )"
    query: "
      SELECT 
        *,
        CAST(DATE_FORMAT(CURRENT_TIMESTAMP, 'yyyy-MM-dd') AS STRING) AS dt, 
        CAST(DATE_FORMAT(CURRENT_TIMESTAMP, 'HH') AS STRING) AS hr FROM source_product"
    parallelism: 4
    distribution:
      className: "io.riffl.sink.row.KeyByFactory"
      properties:
        keys:
          - "type"
        keyParallelism: 2
